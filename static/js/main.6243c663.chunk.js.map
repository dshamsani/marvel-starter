{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/ErrorMessage/error.gif","components/ErrorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/ErrorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apikey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","character","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","r","strokeWidth","stroke","strokeDasharray","fill","strokeLinecap","attributeName","type","repeatCount","dur","keyTimes","values","ErrorMessage","objectFit","src","img","alt","RandomChar","state","char","loading","error","marvelService","onCharLoaded","setState","onError","onCharLoading","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","target","rel","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6243c663.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n  _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  _apikey = \"apikey=f62fd4df52c0fd800ce0511b2842f661\";\r\n  _baseOffset = 210;\r\n\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not getch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  getAllCharacters = async (offset = this._baseOffset) => {\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters?limit=9&offset=${offset}&${this._apikey}`\r\n    );\r\n    return res.data.results.map(this._transformCharacter);\r\n  };\r\n\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters/${id}?${this._apikey}`\r\n    );\r\n    return this._transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  _transformCharacter = (character) => {\r\n    return {\r\n      id: character.id,\r\n      name: character.name,\r\n      description:\r\n        character.description !== \"\"\r\n          ? `${character.description.slice(0, 210)}...`\r\n          : \"Biography not available at the moment\",\r\n      thumbnail: character.thumbnail.path + \".\" + character.thumbnail.extension,\r\n      homepage: character.urls[0].url,\r\n      wiki: character.urls[1].url,\r\n      comics: character.comics.items,\r\n    };\r\n  };\r\n}\r\n\r\nexport default MarvelService;\r\n","const Spinner = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={{\r\n        margin: \"auto\",\r\n        background: \"none\",\r\n        display: \"block\",\r\n        shapeRendering: \"auto\",\r\n      }}\r\n      width=\"200px\"\r\n      height=\"200px\"\r\n      viewBox=\"0 0 100 100\"\r\n      preserveAspectRatio=\"xMidYMid\"\r\n    >\r\n      <circle\r\n        cx=\"50\"\r\n        cy=\"50\"\r\n        r=\"32\"\r\n        strokeWidth=\"8\"\r\n        stroke=\"#bc252d\"\r\n        strokeDasharray=\"50.26548245743669 50.26548245743669\"\r\n        fill=\"none\"\r\n        strokeLinecap=\"round\"\r\n      >\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          type=\"rotate\"\r\n          repeatCount=\"indefinite\"\r\n          dur=\"0.9174311926605504s\"\r\n          keyTimes=\"0;1\"\r\n          values=\"0 50 50;360 50 50\"\r\n        ></animateTransform>\r\n      </circle>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      src={img}\r\n      alt=\"\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport { Component } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nclass RandomChar extends Component {\n  state = {\n    char: {},\n    loading: true,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false });\n  };\n\n  onError = () => {\n    this.setState({ loading: false, error: true });\n  };\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  };\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  render() {\n    const { char, loading, error } = this.state;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n      <div className=\"randomchar\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <div className=\"randomchar__static\">\n          <p className=\"randomchar__title\">\n            Random character for today!\n            <br />\n            Do you want to get to know him better?\n          </p>\n          <p className=\"randomchar__title\">Or choose another one</p>\n          <button className=\"button button__main\">\n            <div onClick={this.updateChar} className=\"inner\">\n              try it\n            </div>\n          </button>\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a\n            href={homepage}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"button button__main\"\n          >\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a\n            href={wiki}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"button button__secondary\"\n          >\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import \"./charList.scss\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport { Component } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    loading: true,\n    error: false,\n    newItemLoading: false,\n    offset: 210,\n    charEnded: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  onRequest = (offset) => {\n    this.onCharListLoading();\n    this.marvelService\n      .getAllCharacters(offset)\n      .then(this.onCharListLoaded)\n      .catch(this.onError);\n  };\n\n  onCharListLoading = () => {\n    this.setState({\n      newItemLoading: true,\n    });\n  };\n\n  onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    this.setState(({ offset, charList }) => ({\n      charList: [...charList, ...newCharList],\n      loading: false,\n      newItemLoading: false,\n      offset: offset + 9,\n      charEnded: ended,\n    }));\n  };\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false,\n    });\n  };\n\n  itemRefs = [];\n\n  setRef = (ref) => {\n    this.itemRefs.push(ref);\n  };\n\n  focusOnItem = (id) => {\n    this.itemRefs.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    this.itemRefs[id].classList.add(\"char__item_selected\");\n    this.itemRefs[id].focus();\n  };\n\n  renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={this.setRef}\n          key={item.id}\n          onClick={() => {\n            this.props.onCharSelected(item.id);\n            this.focusOnItem(i);\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  render() {\n    const { charList, loading, error, offset, newItemLoading, charEnded } =\n      this.state;\n\n    const items = this.renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n      <div className=\"char__list\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <button\n          className=\"button button__main button__long\"\n          disabled={newItemLoading}\n          style={{ display: charEnded ? \"none\" : \"block\" }}\n          onClick={() => this.onRequest(offset)}\n        >\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import \"./charInfo.scss\";\nimport { Component } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar = () => {\n    const { charId } = this.props;\n    if (!charId) {\n      return;\n    }\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  };\n\n  onCharLoaded = (char) => {\n    this.setState({ char, loading: false });\n  };\n\n  onError = () => {\n    this.setState({ loading: false, error: true });\n  };\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  };\n\n  render() {\n    const { char, loading, error } = this.state;\n\n    const skeleton = char || loading || error ? null : <Skeleton />;\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n      <div id=\"char\" className=\"char__info\">\n        {skeleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} style={imgStyle} alt={name} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((item, i) => {\n          if (i > 9) return null;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CharInfo;\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ error: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\n\nimport decoration from \"../../resources/img/vision.png\";\nimport { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    selectedChar: null,\n  };\n\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id,\n    });\n  };\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader />\n        <main>\n          <ErrorBoundary>\n            <RandomChar />\n          </ErrorBoundary>\n          <div className=\"char__content\">\n            <ErrorBoundary>\n              <CharList onCharSelected={this.onCharSelected} />\n            </ErrorBoundary>\n            <ErrorBoundary>\n              <CharInfo charId={this.state.selectedChar} />\n            </ErrorBoundary>\n          </div>\n          <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport \"./style/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}